#include <iostream>
#include <math.h>

using namespace std;

class Circle
{
private:
    float r;
    int x;
    int y;
public:
    Circle();
    Circle(float a, int b, int c);
    void setR(float a);
    float getR();
    void setX(int a);
    int getX();
    void setY(int a);
    int getY();
    float Area();
    void Info();
    bool Intersect(Circle c);
};

Circle::Circle()
{
    r = 0;
    x = 0;
    y = 0;
}

Circle::Circle(float a, int b, int c)
{
    r = a;
    x = b;
    y = c;
}

void Circle::setR(float a)
{
    r = a;
}

float Circle::getR()
{
    return r;
}

void Circle::setX(int a)
{
    x = a;
}

int Circle::getX()
{
    return x;
}

void Circle::setY(int c)
{
    y = c;
}

int Circle::getY()
{
    return y;
}

float Circle::Area()
{
    return r*r*3.14;
}

void Circle::Info()
{
    cout << "Circle's radius: " << r << endl;
    cout << "X= " << x << endl;
    cout << "Y= " << y << endl;
    cout << "Area=" << Area() << endl;
}

bool Circle::Intersect(Circle c)
{
   float d;
   float radius;
   d =  sqrt((c.x - x)*(c.x - x) + (c.y - y)*(c.y - y));
   radius = r + c.r;
   if(d > r) return false;
   else if(d < r) return true;
}

int main()
{
Circle One(3,5,9);
One.Info();
Circle Two(5,7,4);
Two.Info();
if(Two.Intersect(One)) cout << "The circles cross.";
else cout << "The circles does not cross.";
    return 0;
}
